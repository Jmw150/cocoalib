------------------------------------------------------------------------
-- TUTORIAL 4
------------------------------------------------------------------------

-- FREE HYPERPLANE ARRANGEMENTS

------------------------------------------------------------------------

-- DEFINITION

-- A central hyperplane arrangement in K^l is FREE if D(A) the module of
-- logarithmic vector fields is a free module.

-- The EXPONENTS of a free arrangement A are the degree of a basis of D(A).

-- If A has n hyperplanes and it is free with ArrExponents(A) = [ e1,...,el ],
-- then n = sum(ArrExponents(A)).

------------------------------------------------------------------------

-- THEOREM (Saito's criterion)

-- An arrangement in K^l with defining equation Q = 0 is free iff
-- there exists a (lxl) matrix M such that
-- (1) det(M) = c*Q for a non-zero scalar c,
-- (2) gens(jacobian(Q))*M = 0 (mod Q),
-- where jacobian(Q) is the ideal generated by Q and its derivatives.

------------------------------------------------------------------------

use S ::= QQ[x,y,z,t];

-- (1)
A1 := ArrBoolean(S,4); A1;
Q1 := product(A1); Q1;
J1 := GensJacobian(Q1); J1;
M := ArrDerModule(A1); M;
det(M) = Q1;
matrix([J1])*M;
ArrExponents(A1);
sum(It) = deg(Q1);
IsArrFree(A1);

--(2)
A2 := [x,y,z,x+3*y,y-z-t,z-4*t]; A2;
Q2 := product(A2); Q2;
ArrDerModule(Q2); ---> The input is different from A1
-- ArrExponents(Q2); --> error: because not free
IsArrFree(Q2);

------------------------------------------------------------------------

-- REMARK

-- If A is central we can always assume that e1 = 1. This is because
-- the Euler vector field is always in D(A).

------------------------------------------------------------------------

use S ::= QQ[x,y,z,t];

-- (1)
A1 := ArrBoolean(S,4); A1;
Q1 := product(A1); Q1;
J1 := GensJacobian(Q1); J1;
(RowMat(indets(S))*ColMat(J1))[1,1] = deg(Q1)*Q1;


--(2)
A2 := [x,y,z,x+3*y,y-z-t,z-4*t]; A2;
Q2 := product(A2); Q2;
J2 := GensJacobian(Q2); J2;
(RowMat(indets(S))*ColMat(J2))[1,1] = deg(Q2)*Q2;

------------------------------------------------------------------------

-- THEOREM (Factorization theorem)

-- If A is free with ArrExponents(A) = [ e1,...,el ], then
-- ArrCharPoly(A) = (t-e1)...(t-el).

------------------------------------------------------------------------

-- COROLLARY

-- The exponents of a free arrangement are combinatorial.

------------------------------------------------------------------------

use S ::= QQ[x,y,z,t];

-- (1)
A1 := ArrBoolean(S,4); A1;
ArrExponents(A1);
factor(ArrCharPoly(A1));

-- (2)
A2 := ArrGraphical(S,[[1,2],[1,3],[1,4],[2,4],[3,4]]); A2;
ArrExponents(A2);
factor(ArrCharPoly(A2));

--(3)
use S ::= QQ[x,y,z];
A3 := ArrCone([x,x+y,x-y,x+2*y,x-2*y,y-1],z); A3;
IsArrFree(A3);
-- ArrExponents(A3); -- Not free!
factor(ArrCharPoly(A3)); -- The previous theorem is NOT iff.

------------------------------------------------------------------------

-- CONJECTURE (Terao)

-- The freeness depends only on the isomorphism type of ArrLattice(A).

------------------------------------------------------------------------

-- THEOREM 

-- Every reflection arrangement is free.
-- Every Shi arrangement is free.
-- Every Catalan arrangement is free

------------------------------------------------------------------------

use S ::= QQ[x,y,z,t];

A1 := ArrBraid(S,4); A1;
IsArrFree(A1);
ArrDerModule(A1);
ArrExponents(A1);

A2 := ArrTypeD(S,4); A2;
IsArrFree(A2);
ArrDerModule(A2);
ArrExponents(A2);

A3 := ArrTypeB(S,3); A3;
IsArrFree(A3);
ArrDerModule(A3);
ArrExponents(A3);

A4 := ArrCone(ArrShiA(S,3),t); A4;
IsArrFree(A4);
ArrDerModule(A4);
ArrExponents(A4);

A5 := ArrCone(ArrShiD(S,3),t); A5;
IsArrFree(A5);
ArrDerModule(A5);
ArrExponents(A5);

-- slow
-- A6 := ArrCone(ArrShiB(S,3),t); A6;
-- IsArrFree(A6);
-- ArrDerModule(A6);
-- ArrExponents(A6);

A7 := ArrCone(ArrCatalanA(S,3),t); A7;
IsArrFree(A7);
ArrDerModule(A7);
ArrExponents(A7);

A8 := ArrCone(ArrCatalanD(S,3),t); A8;
IsArrFree(A8);
ArrDerModule(A8);
ArrExponents(A8);

-- slow
-- A9 := ArrCone(ArrCatalanB(S,3),t); A9;
-- IsArrFree(A9);
-- ArrDerModule(A9);
-- ArrExponents(A9);

------------------------------------------------------------------------

-- What happens if we change characteristic of the base field?

-- (1)
use S ::= QQ[x,y,z,t];
A := ArrBoolean(S,4); A;
ArrDerModule(A);
ArrExponents(A);

use S2 ::= ZZ/(2)[x,y,z,t];
A_2 := ArrBoolean(S2,4); A_2;
ArrDerModule(A_2);
ArrExponents(A_2);

use S7 ::=  ZZ/(7)[x,y,z,t];
A_7 := ArrBoolean(S7,4); A_7;
ArrDerModule(A_7);
ArrExponents(A_7);

-- (2)
use QQ[x,y,z];
A := [x,y,z,x-y,x+z,y+z,x+y+z];
ArrDerModule(A);
ArrExponents(A);

use ZZ/(2)[x,y,z];
A_2 := [x,y,z,x-y,x+z,y+z,x+y+z];
ArrDerModule(A_2);
ArrExponents(A_2); -- still free but different exponents!!

--(3)
use ZZ/(3)[x,y,z];
A_3 :=  [x,y,z,x+y,x+2*y,x+z,x+2*z,y+z,y+2*z,x+y+z,x+2*y+z,x+y+2*z,x+2*y+2*z]; A_3;
ArrDerModule(A_3);
ArrExponents(A_3);

use QQ[x,y,z];
A := [x,y,z,x+y,x+2*y,x+z,x+2*z,y+z,y+2*z,x+y+z,x+2*y+z,x+y+2*z,x+2*y+2*z];
ArrDerModule(A);
IsArrFree(A); -- same defining equation but not free.

use S ::= ZZ/(7)[x,y,z];
A_7 :=  [x,y,z,x+y,x+2*y,x+z,x+2*z,y+z,y+2*z,x+y+z,x+2*y+z,x+y+2*z,x+2*y+2*z]; A_7;
IsArrFree(A_7);  -- same defining equation but not free.

-- (4) (very long)
-- use S ::= QQ[x,y,z,t,h];
-- A := ArrCone(ArrShiCatalanB(S,4,[-2,2]),h); A;
-- ArrExponents(A); --> [1,13,15,17]

use S ::= ZZ/(5)[x,y,z,t,h];
A_5 := ArrCone(ArrShiCatalanB(S,4,[-2,2]),h); A_5;
-- ArrExponents(A_5); --> [1,5,15,25]

use S ::= ZZ/(7)[x,y,z,t,h];
A_7 := ArrCone(ArrShiCatalanB(S,4,[-2,2]),h); A_7;
-- IsArrFree(A_7); --> false

-- (5)
use QQ[x,y,z];
A := [x,y,z,x+y,x+3*y]; A;
ArrDerModule(A);
ArrExponents(A);

use ZZ/(3)[x,y,z];
A_3 := [x,y,z,x+y,x+3*y]; A_3;
-- ArrDerModule(A_3);     -- error: because not distinct
-- ArrExponents(A_3);  -- error: because not distinct
-- IsArrFree(A_3);     -- error: because not distinct

Q_3 := product(A_3); Q_3;
ArrDerModule(Q_3);
ArrExponents(Q_3);
sum(It) = deg(Q_3);
IsArrFree(Q_3);

sqrtQ_3 := product(SqFreeFactor(Q_3).factors); sqrtQ_3;
ArrDerModule(sqrtQ_3);
ArrExponents(sqrtQ_3);
sum(It) = deg(sqrtQ_3);
IsArrFree(sqrtQ_3);

------------------------------------------------------------------------

-- EXERCISE

-- Find new examples in which "funny things" happens changing characteristic.

------------------------------------------------------------------------

------------------------------------------------------------------------

-- CHARACTERIZATIONS OF FREENESS

------------------------------------------------------------------------

-- THEOREM (Terao)

-- A central arrangement in K^l with defining equation Q is free iff R/jacobian(Q) 
-- has resolution: 0 --> R^(a-1) --> R^a --> R, or R/jacobian(Q) = 0.

-- If A is also essential, a = l.

------------------------------------------------------------------------

use  S ::= QQ[x,y,z];

-- (0)
A0 := [x+y+z]; A0;
J0 := ideal(GensJacobian(product(A0))); J0; -- is the ideal (1)
///QQQ how to show S/J0=0?
IsArrFree(A0);

-- (1)
A1 := ArrTypeB(S,3); A1;
J1 := ideal(GensJacobian(product(A1))); J1;
PrintRes(S/J1);
IsArrFree(A1);

-- (2)
A2 := ArrBraid(S,3); A2;
J2 := ideal(GensJacobian(product(A2))); J2;
PrintRes(S/J2);
IsArrFree(A2);

-- (3)
A3 := [x,y,z,x+3*y,y-z,x-4*z]; A3;
J3 := ideal(GensJacobian(product(A3))); J3;
PrintRes(S/J3);
IsArrFree(A3);

------------------------------------------------------------------------

-- EXERCISE

-- If A is a free central and essential arrangement, what is the relations between
-- the exponents of A and the shifts in the resolution of R/jacobian(Q)?

------------------------------------------------------------------------

-- THEOREM (Terao Deletion/Restriction Theorem)

-- Let A be an arrangement in K^l and fix a hyperplane H of A. Then
-- any 2 of the following statement implies the third:
-- A is free with exponents [ e_1,...,e_l ]
-- ArrDeletion(A,H) is free with exponents [ e_1,...,(e_l)-1 ]
-- ArrRestriction(A,H) is free with exponents [ e_1,...,e_{l-1} ].

------------------------------------------------------------------------

-- (1)
Use S ::= QQ[x,y,z,t];
G := [[1,2],[1,3],[1,4],[2,3],[2,4],[3,4]];
A := ArrGraphical(S,G); A;
A1 := ArrDeletion(A,x-y); A1;
A2 := ArrRestriction(A,x-y); A2;
ArrExponents(A);
ArrExponents(A1);
ArrExponents(A2);

--(2)
G := [[1,2],[1,3],[1,4],[2,4],[3,4]];
A := ArrGraphical(S,G); A;
A1 := ArrDeletion(A,x-t); A1;
A2 := ArrRestriction(A,x-t); A2;
ArrExponents(A);
-- ArrExponents(A1); --> not free
ArrExponents(A2); -- these exponents are not subset of the ones of A

------------------------------------------------------------------------

-- THEOREM (Abe Division Theorem)

-- Let A be an arrangement in K^l and fix a hyperplane H of A.
-- If A_res := ArrRestriction(A,H) is free and chi(A_res,t) 
-- divides chi(A,t), then A is free.

------------------------------------------------------------------------

-- (1)
use S ::= QQ[x,y,z,t];
A := ArrCone(ArrCatalanA(S,3),t); A;
A_res := ArrRestriction(A,x-z-t); A_res;
IsArrFree(A_res);
-- IsDivisible(ArrCharPoly(A),ArrCharPoly(A_res)); -- slow
IsArrFree(A);

A_res2 := ArrRestriction(A,x-y); A_res2;
IsArrFree(A_res2);
IsDivisible(ArrCharPoly(A),ArrCharPoly(A_res2)); -- The previous theorem is not iff

-- (2)
use QQ[x,y,z];
A := [x,y,z,x+3*y,y-z,x-4*z]; A;
A_res := ArrRestriction(A,x); A_res;
IsArrFree(A_res);
IsDivisible(ArrCharPoly(A),ArrCharPoly(A_res));
IsArrFree(A);

------------------------------------------------------------------------

-- EXERCISE

-- Check that in the previous example (2), ArrRestriction(A,H) is free for any
-- H in A and that IsDivisible(ArrCharPoly(A),ArrCharPoly(A_res)) is always false.

------------------------------------------------------------------------

-- THEOREM (Generic Initial Ideal)

-- An arrangement A with defining equation Q is free iff
-- GinJacobian(Q) = (x^(n-1), x^(n-2)*y^(a1),...,y^(n-1+k)),
-- where n = #A.

------------------------------------------------------------------------

Use S ::= QQ[x,y,z,t];

-- (1)
A1 := ArrSignedGraphical(S,[[1,2],[1,3]],[[1,4],[3,4],[2,4]],[1,3]); A1;
GinJacobian(product(A1));
IsArrFree(A1);


-- (2)
A2 := ArrSignedGraphical(S,[[1,2],[1,3]],[[3,4],[2,4]],[1,3]); A2;
GinJacobian(product(A2));
IsArrFree(A2);

------------------------------------------------------------------------

-- THEOREM (Sectional Matrix)

-- An arrangement with defining equation Q is free iff
-- M := SectionalMatrix(S/Jacobian(Q)) has the following properties:
-- (1) M(3,d) = M(3,d+1) = M(3,d+2), where d := min[ j | M(2,j) = 0 ]
-- (2) M(3,d) = sum[ M(2,j) | j = 0,...,d ].

------------------------------------------------------------------------

Use S ::= QQ[x,y,z,t];

-- (1)
A1 := ArrTypeD(S,4); A1;
J1 := ideal(GensJacobian(product(A1)));
-- M1 := SectionalMatrix(S/J1); M1; -- slow

-- How can we print it more clearly?

-- PrintSectionalMatrix(S/J1); -- slow
-- sum(GetRow(M1,2)) = 82;
-- IsArrFree(A1);

-- (2)
A2 := [x,y,z,x+y-z,x+z,x+2*z,x+y+z]; A2;
J2 := ideal(GensJacobian(product(A2)));
M2 := SectionalMatrix(S/J2); M2;
PrintSectionalMatrix(S/J2);
IsArrFree(A2);

------------------------------------------------------------------------
------------------------------------------------------------------------
